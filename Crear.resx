<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>